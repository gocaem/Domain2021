/*
 * International Telephone Input v17.0.17
 * https://github.com/jackocnr/intl-tel-input.git
 * Licensed under the MIT license
 */

!function (t) { "object" == typeof module && module.exports ? module.exports = t(require("jquery")) : "function" == typeof define && define.amd ? define(["jquery"], function (i) { t(i) }) : t(jQuery) }(function (t, i) { "use strict"; function e(t, i) { for (var e = 0; e < i.length; e++) { var s = i[e]; s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s) } } for (var s = [["Jordan (‫الأردن‬‎)", "jo", "962"]], n = 0; n < s.length; n++) { var a = s[n]; s[n] = { name: a[0], iso2: a[1], dialCode: a[2], priority: a[3] || 0, areaCodes: a[4] || null } } var o = { getInstance: function (t) { var i = t.getAttribute("data-intl-tel-input-id"); return window.intlTelInputGlobals.instances[i] }, instances: {}, documentReady: function () { return "complete" === document.readyState } }; "object" == typeof window && (window.intlTelInputGlobals = o); var r = 0, l = { allowDropdown: !0, autoHideDialCode: !0, autoPlaceholder: "polite", customContainer: "", customPlaceholder: null, dropdownContainer: null, excludeCountries: [], formatOnDisplay: !0, geoIpLookup: null, hiddenInput: "", initialCountry: "", localizedCountries: null, nationalMode: !0, onlyCountries: [], placeholderNumberType: "MOBILE", preferredCountries: ["us", "gb"], separateDialCode: !1, utilsScript: "" }, h = ["800", "822", "833", "844", "855", "866", "877", "880", "881", "882", "883", "884", "885", "886", "887", "888", "889"], u = function (t, i) { for (var e = Object.keys(t), s = 0; s < e.length; s++)i(e[s], t[e[s]]) }, d = function (t) { u(window.intlTelInputGlobals.instances, function (i) { window.intlTelInputGlobals.instances[i][t]() }) }, c = function () { var t, n, a; function o(t, i) { var e = this; (function t(i, e) { if (!(i instanceof e)) throw TypeError("Cannot call a class as a function") })(this, o), this.id = r++, this.a = t, this.b = null, this.c = null; var s = i || {}; this.d = {}, u(l, function (t, i) { e.d[t] = s.hasOwnProperty(t) ? s[t] : i }), this.e = Boolean(t.getAttribute("placeholder")) } return t = o, n = [{ key: "_init", value: function () { var t = this; if (this.d.nationalMode && (this.d.autoHideDialCode = !1), this.d.separateDialCode && (this.d.autoHideDialCode = this.d.nationalMode = !1), this.g = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent), this.g && (document.body.classList.add("iti-mobile"), this.d.dropdownContainer || (this.d.dropdownContainer = document.body)), "undefined" != typeof Promise) { var i = new Promise(function (i, e) { t.h = i, t.i = e }), e = new Promise(function (i, e) { t.i0 = i, t.i1 = e }); this.promise = Promise.all([i, e]) } else this.h = this.i = function () { }, this.i0 = this.i1 = function () { }; this.s = {}, this._b(), this._f(), this._h(), this._i(), this._i3() } }, { key: "_b", value: function () { this._d(), this._d2(), this._e(), this.d.localizedCountries && this._d0(), (this.d.onlyCountries.length || this.d.localizedCountries) && this.p.sort(this._d1) } }, { key: "_c", value: function (t, e, s) { e.length > this.countryCodeMaxLen && (this.countryCodeMaxLen = e.length), this.q.hasOwnProperty(e) || (this.q[e] = []); for (var n = 0; n < this.q[e].length; n++)if (this.q[e][n] === t) return; var a = s !== i ? s : this.q[e].length; this.q[e][a] = t } }, { key: "_d", value: function () { if (this.d.onlyCountries.length) { var t = this.d.onlyCountries.map(function (t) { return t.toLowerCase() }); this.p = s.filter(function (i) { return t.indexOf(i.iso2) > -1 }) } else if (this.d.excludeCountries.length) { var i = this.d.excludeCountries.map(function (t) { return t.toLowerCase() }); this.p = s.filter(function (t) { return -1 === i.indexOf(t.iso2) }) } else this.p = s } }, { key: "_d0", value: function () { for (var t = 0; t < this.p.length; t++) { var i = this.p[t].iso2.toLowerCase(); this.d.localizedCountries.hasOwnProperty(i) && (this.p[t].name = this.d.localizedCountries[i]) } } }, { key: "_d1", value: function (t, i) { return t.name.localeCompare(i.name) } }, { key: "_d2", value: function () { this.countryCodeMaxLen = 0, this.dialCodes = {}, this.q = {}; for (var t = 0; t < this.p.length; t++) { var i = this.p[t]; this.dialCodes[i.dialCode] || (this.dialCodes[i.dialCode] = !0), this._c(i.iso2, i.dialCode, i.priority) } for (var e = 0; e < this.p.length; e++) { var s = this.p[e]; if (s.areaCodes) for (var n = this.q[s.dialCode][0], a = 0; a < s.areaCodes.length; a++) { for (var o = s.areaCodes[a], r = 1; r < o.length; r++) { var l = s.dialCode + o.substr(0, r); this._c(n, l), this._c(s.iso2, l) } this._c(s.iso2, s.dialCode + o) } } } }, { key: "_e", value: function () { this.preferredCountries = []; for (var t = 0; t < this.d.preferredCountries.length; t++) { var i = this.d.preferredCountries[t].toLowerCase(), e = this._y(i, !1, !0); e && this.preferredCountries.push(e) } } }, { key: "_e2", value: function (t, i, e) { var s = document.createElement(t); return i && u(i, function (t, i) { return s.setAttribute(t, i) }), e && e.appendChild(s), s } }, { key: "_f", value: function () { this.a.hasAttribute("autocomplete") || this.a.form && this.a.form.hasAttribute("autocomplete") || this.a.setAttribute("autocomplete", "off"); var t = "iti"; this.d.allowDropdown && (t += " iti--allow-dropdown"), this.d.separateDialCode && (t += " iti--separate-dial-code"), this.d.customContainer && (t += " ", t += this.d.customContainer); var i = this._e2("div", { class: t }); if (this.a.parentNode.insertBefore(i, this.a), this.k = this._e2("div", { class: "iti__flag-container" }, i), i.appendChild(this.a), this.selectedFlag = this._e2("div", { class: "iti__selected-flag", role: "combobox", "aria-controls": "iti-".concat(this.id, "__country-listbox"), "aria-owns": "iti-".concat(this.id, "__country-listbox"), "aria-expanded": "false" }, this.k), this.l = this._e2("div", { class: "iti__flag" }, this.selectedFlag), this.d.separateDialCode && (this.t = this._e2("div", { class: "iti__selected-dial-code" }, this.selectedFlag)), this.d.allowDropdown && (this.selectedFlag.setAttribute("tabindex", "0"), this.u = this._e2("div", { class: "iti__arrow" }, this.selectedFlag), this.m = this._e2("ul", { class: "iti__country-list iti__hide", id: "iti-".concat(this.id, "__country-listbox"), role: "listbox", "aria-label": "List of countries" }), this.preferredCountries.length && (this._g(this.preferredCountries, "iti__preferred", !0), this._e2("li", { class: "iti__divider", role: "separator", "aria-disabled": "true" }, this.m)), this._g(this.p, "iti__standard"), this.d.dropdownContainer ? (this.dropdown = this._e2("div", { class: "iti iti--container" }), this.dropdown.appendChild(this.m)) : this.k.appendChild(this.m)), this.d.hiddenInput) { var e = this.d.hiddenInput, s = this.a.getAttribute("name"); if (s) { var n = s.lastIndexOf("["); -1 !== n && (e = "".concat(s.substr(0, n), "[").concat(e, "]")) } this.hiddenInput = this._e2("input", { type: "hidden", name: e }), i.appendChild(this.hiddenInput) } } }, { key: "_g", value: function (t, i, e) { for (var s = "", n = 0; n < t.length; n++) { var a = t[n], o = e ? "-preferred" : ""; s += "<li class='iti__country ".concat(i, "' tabIndex='-1' id='iti-").concat(this.id, "__item-").concat(a.iso2).concat(o, "' role='option' data-dial-code='").concat(a.dialCode, "' data-country-code='").concat(a.iso2, "' aria-selected='false'>"), s += "<div class='iti__flag-box'><div class='iti__flag iti__".concat(a.iso2, "'></div></div>"), s += "<span class='iti__country-name'>".concat(a.name, "</span>"), s += "<span class='iti__dial-code'>+".concat(a.dialCode, "</span>"), s += "</li>" } this.m.insertAdjacentHTML("beforeend", s) } }, { key: "_h", value: function () { var t = this.a.getAttribute("value"), i = this.a.value, e = t && "+" === t.charAt(0) && (!i || "+" !== i.charAt(0)) ? t : i, s = this._5(e), n = this._w(e), a = this.d, o = a.initialCountry, r = a.nationalMode, l = a.autoHideDialCode, h = a.separateDialCode; s && !n ? this._v(e) : "auto" !== o && (o ? this._z(o.toLowerCase()) : s && n ? this._z("us") : (this.j = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.p[0].iso2, e || this._z(this.j)), e || r || l || h || (this.a.value = "+".concat(this.s.dialCode))), e && this._u(e) } }, { key: "_i", value: function () { this._j(), this.d.autoHideDialCode && this._l(), this.d.allowDropdown && this._i2(), this.hiddenInput && this._i0() } }, { key: "_i0", value: function () { var t = this; this._a14 = function () { t.hiddenInput.value = t.getNumber() }, this.a.form && this.a.form.addEventListener("submit", this._a14) } }, { key: "_i1", value: function () { for (var t = this.a; t && "LABEL" !== t.tagName;)t = t.parentNode; return t } }, { key: "_i2", value: function () { var t = this; this._a9 = function (i) { t.m.classList.contains("iti__hide") ? t.a.focus() : i.preventDefault() }; var i = this._i1(); i && i.addEventListener("click", this._a9), this._a10 = function () { !t.m.classList.contains("iti__hide") || t.a.disabled || t.a.readOnly || t._n() }, this.selectedFlag.addEventListener("click", this._a10), this._a11 = function (i) { t.m.classList.contains("iti__hide") && -1 !== ["ArrowUp", "Up", "ArrowDown", "Down", " ", "Enter"].indexOf(i.key) && (i.preventDefault(), i.stopPropagation(), t._n()), "Tab" === i.key && t._2() }, this.k.addEventListener("keydown", this._a11) } }, { key: "_i3", value: function () { var t = this; this.d.utilsScript && !window.intlTelInputUtils ? window.intlTelInputGlobals.documentReady() ? window.intlTelInputGlobals.loadUtils(this.d.utilsScript) : window.addEventListener("load", function () { window.intlTelInputGlobals.loadUtils(t.d.utilsScript) }) : this.i0(), "auto" === this.d.initialCountry ? this._i4() : this.h() } }, { key: "_i4", value: function () { window.intlTelInputGlobals.autoCountry ? this.handleAutoCountry() : window.intlTelInputGlobals.startedLoadingAutoCountry || (window.intlTelInputGlobals.startedLoadingAutoCountry = !0, "function" == typeof this.d.geoIpLookup && this.d.geoIpLookup(function (t) { window.intlTelInputGlobals.autoCountry = t.toLowerCase(), setTimeout(function () { return d("handleAutoCountry") }) }, function () { return d("rejectAutoCountryPromise") })) } }, { key: "_j", value: function () { var t = this; this._a12 = function () { t._v(t.a.value) && t._m2CountryChange() }, this.a.addEventListener("keyup", this._a12), this._a13 = function () { setTimeout(t._a12) }, this.a.addEventListener("cut", this._a13), this.a.addEventListener("paste", this._a13) } }, { key: "_j2", value: function (t) { var i = this.a.getAttribute("maxlength"); return i && t.length > i ? t.substr(0, i) : t } }, { key: "_l", value: function () { var t = this; this._a8 = function () { t._l2() }, this.a.form && this.a.form.addEventListener("submit", this._a8), this.a.addEventListener("blur", this._a8) } }, { key: "_l2", value: function () { if ("+" === this.a.value.charAt(0)) { var t = this._m(this.a.value); t && this.s.dialCode !== t || (this.a.value = "") } } }, { key: "_m", value: function (t) { return t.replace(/\D/g, "") } }, { key: "_m2", value: function (t) { var i = document.createEvent("Event"); i.initEvent(t, !0, !0), this.a.dispatchEvent(i) } }, { key: "_n", value: function () { this.m.classList.remove("iti__hide"), this.selectedFlag.setAttribute("aria-expanded", "true"), this._o(), this.b && (this._x(this.b, !1), this._3(this.b, !0)), this._p(), this.u.classList.add("iti__arrow--up"), this._m2("open:countrydropdown") } }, { key: "_n2", value: function (t, i, e) { e && !t.classList.contains(i) ? t.classList.add(i) : !e && t.classList.contains(i) && t.classList.remove(i) } }, { key: "_o", value: function () { var t = this; if (this.d.dropdownContainer && this.d.dropdownContainer.appendChild(this.dropdown), !this.g) { var i = this.a.getBoundingClientRect(), e = window.pageYOffset || document.documentElement.scrollTop, s = i.top + e, n = this.m.offsetHeight, a = s + this.a.offsetHeight + n < e + window.innerHeight, o = s - n > e; if (this._n2(this.m, "iti__country-list--dropup", !a && o), this.d.dropdownContainer) { var r = !a && o ? 0 : this.a.offsetHeight; this.dropdown.style.top = "".concat(s + r, "px"), this.dropdown.style.left = "".concat(i.left + document.body.scrollLeft, "px"), this._a4 = function () { return t._2() }, window.addEventListener("scroll", this._a4) } } } }, { key: "_o2", value: function (t) { for (var i = t; i && i !== this.m && !i.classList.contains("iti__country");)i = i.parentNode; return i === this.m ? null : i } }, { key: "_p", value: function () { var t = this; this._a0 = function (i) { var e = t._o2(i.target); e && t._x(e, !1) }, this.m.addEventListener("mouseover", this._a0), this._a1 = function (i) { var e = t._o2(i.target); e && t._1(e) }, this.m.addEventListener("click", this._a1); var i = !0; this._a2 = function () { i || t._2(), i = !1 }, document.documentElement.addEventListener("click", this._a2); var e = "", s = null; this._a3 = function (i) { i.preventDefault(), "ArrowUp" === i.key || "Up" === i.key || "ArrowDown" === i.key || "Down" === i.key ? t._q(i.key) : "Enter" === i.key ? t._r() : "Escape" === i.key ? t._2() : /^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(i.key) && (s && clearTimeout(s), e += i.key.toLowerCase(), t._s(e), s = setTimeout(function () { e = "" }, 1e3)) }, document.addEventListener("keydown", this._a3) } }, { key: "_q", value: function (t) { var i = "ArrowUp" === t || "Up" === t ? this.c.previousElementSibling : this.c.nextElementSibling; i && (i.classList.contains("iti__divider") && (i = "ArrowUp" === t || "Up" === t ? i.previousElementSibling : i.nextElementSibling), this._x(i, !0)) } }, { key: "_r", value: function () { this.c && this._1(this.c) } }, { key: "_s", value: function (t) { for (var i = 0; i < this.p.length; i++)if (this._t(this.p[i].name, t)) { var e = this.m.querySelector("#iti-".concat(this.id, "__item-").concat(this.p[i].iso2)); this._x(e, !1), this._3(e, !0); break } } }, { key: "_t", value: function (t, i) { return t.substr(0, i.length).toLowerCase() === i } }, { key: "_u", value: function (t) { var i = t; if (this.d.formatOnDisplay && window.intlTelInputUtils && this.s) { var e = !this.d.separateDialCode && (this.d.nationalMode || "+" !== i.charAt(0)), s = intlTelInputUtils.numberFormat, n = s.NATIONAL, a = s.INTERNATIONAL; i = intlTelInputUtils.formatNumber(i, this.s.iso2, e ? n : a) } i = this._7(i), this.a.value = i } }, { key: "_v", value: function (t) { var i = t, e = this.s.dialCode; i && this.d.nationalMode && "1" === e && "+" !== i.charAt(0) && ("1" !== i.charAt(0) && (i = "1".concat(i)), i = "+".concat(i)), this.d.separateDialCode && e && "+" !== i.charAt(0) && (i = "+".concat(e).concat(i)); var s = this._5(i, !0), n = this._m(i), a = null; if (s) { var o = this.q[this._m(s)], r = -1 !== o.indexOf(this.s.iso2) && n.length <= s.length - 1; if (!("1" === e && this._w(n)) && !r) { for (var l = 0; l < o.length; l++)if (o[l]) { a = o[l]; break } } } else "+" === i.charAt(0) && n.length ? a = "" : i && "+" !== i || (a = this.j); return null !== a && this._z(a) } }, { key: "_w", value: function (t) { var i = this._m(t); if ("1" === i.charAt(0)) { var e = i.substr(1, 3); return -1 !== h.indexOf(e) } return !1 } }, { key: "_x", value: function (t, i) { var e = this.c; e && e.classList.remove("iti__highlight"), this.c = t, this.c.classList.add("iti__highlight"), i && this.c.focus() } }, { key: "_y", value: function (t, i, e) { for (var n = i ? s : this.p, a = 0; a < n.length; a++)if (n[a].iso2 === t) return n[a]; if (e) return null; throw Error("No country data for '".concat(t, "'")) } }, { key: "_z", value: function (t) { var i = this.s.iso2 ? this.s : {}; this.s = t ? this._y(t, !1, !1) : {}, this.s.iso2 && (this.j = this.s.iso2), this.l.setAttribute("class", "iti__flag iti__".concat(t)); var e = t ? "".concat(this.s.name, ": +").concat(this.s.dialCode) : "Unknown"; if (this.selectedFlag.setAttribute("title", e), this.d.separateDialCode) { var s = this.s.dialCode ? "+".concat(this.s.dialCode) : ""; this.t.innerHTML = s; var n = this.selectedFlag.offsetWidth || this._z2(); this.a.style.paddingLeft = "".concat(n + 6, "px") } if (this._0(), this.d.allowDropdown) { var a = this.b; if (a && (a.classList.remove("iti__active"), a.setAttribute("aria-selected", "false")), t) { var o = this.m.querySelector("#iti-".concat(this.id, "__item-").concat(t, "-preferred")) || this.m.querySelector("#iti-".concat(this.id, "__item-").concat(t)); o.setAttribute("aria-selected", "true"), o.classList.add("iti__active"), this.b = o, this.selectedFlag.setAttribute("aria-activedescendant", o.getAttribute("id")) } } return i.iso2 !== t } }, { key: "_z2", value: function () { var t = this.a.parentNode.cloneNode(); t.style.visibility = "hidden", document.body.appendChild(t); var i = this.k.cloneNode(); t.appendChild(i); var e = this.selectedFlag.cloneNode(!0); i.appendChild(e); var s = e.offsetWidth; return t.parentNode.removeChild(t), s } }, { key: "_0", value: function () { var t = "aggressive" === this.d.autoPlaceholder || !this.e && "polite" === this.d.autoPlaceholder; if (window.intlTelInputUtils && t) { var i = intlTelInputUtils.numberType[this.d.placeholderNumberType], e = this.s.iso2 ? intlTelInputUtils.getExampleNumber(this.s.iso2, this.d.nationalMode, i) : ""; e = this._7(e), "function" == typeof this.d.customPlaceholder && (e = this.d.customPlaceholder(e, this.s)), this.a.setAttribute("placeholder", e) } } }, { key: "_1", value: function (t) { var i = this._z(t.getAttribute("data-country-code")); this._2(), this._4(t.getAttribute("data-dial-code"), !0), this.a.focus(); var e = this.a.value.length; this.a.setSelectionRange(e, e), i && this._m2CountryChange() } }, { key: "_2", value: function () { this.m.classList.add("iti__hide"), this.selectedFlag.setAttribute("aria-expanded", "false"), this.u.classList.remove("iti__arrow--up"), document.removeEventListener("keydown", this._a3), document.documentElement.removeEventListener("click", this._a2), this.m.removeEventListener("mouseover", this._a0), this.m.removeEventListener("click", this._a1), this.d.dropdownContainer && (this.g || window.removeEventListener("scroll", this._a4), this.dropdown.parentNode && this.dropdown.parentNode.removeChild(this.dropdown)), this._m2("close:countrydropdown") } }, { key: "_3", value: function (t, i) { var e = this.m, s = window.pageYOffset || document.documentElement.scrollTop, n = e.offsetHeight, a = e.getBoundingClientRect().top + s, o = t.offsetHeight, r = t.getBoundingClientRect().top + s, l = r - a + e.scrollTop, h = n / 2 - o / 2; r < a ? (i && (l -= h), e.scrollTop = l) : r + o > a + n && (i && (l += h), e.scrollTop = l - (n - o)) } }, { key: "_4", value: function (t, i) { var e, s = this.a.value, n = "+".concat(t); if ("+" === s.charAt(0)) { var a = this._5(s); e = a ? s.replace(a, n) : n } else { if (this.d.nationalMode || this.d.separateDialCode) return; if (s) e = n + s; else { if (!i && this.d.autoHideDialCode) return; e = n } } this.a.value = e } }, { key: "_5", value: function (t, i) { var e = ""; if ("+" === t.charAt(0)) for (var s = "", n = 0; n < t.length; n++) { var a = t.charAt(n); if (!isNaN(parseInt(a, 10))) { if (s += a, i) this.q[s] && (e = t.substr(0, n + 1)); else if (this.dialCodes[s]) { e = t.substr(0, n + 1); break } if (s.length === this.countryCodeMaxLen) break } } return e } }, { key: "_6", value: function () { var t = this.a.value.trim(), i = this.s.dialCode, e = this._m(t); return (this.d.separateDialCode && "+" !== t.charAt(0) && i && e ? "+".concat(i) : "") + t } }, { key: "_7", value: function (t) { var i = t; if (this.d.separateDialCode) { var e = this._5(i); if (e) { var s = " " === i[(e = "+".concat(this.s.dialCode)).length] || "-" === i[e.length] ? e.length + 1 : e.length; i = i.substr(s) } } return this._j2(i) } }, { key: "_m2CountryChange", value: function () { this._m2("countrychange") } }, { key: "handleAutoCountry", value: function () { "auto" === this.d.initialCountry && (this.j = window.intlTelInputGlobals.autoCountry, this.a.value || this.setCountry(this.j), this.h()) } }, { key: "handleUtils", value: function () { window.intlTelInputUtils && (this.a.value && this._u(this.a.value), this._0()), this.i0() } }, { key: "destroy", value: function () { var t = this.a.form; if (this.d.allowDropdown) { this._2(), this.selectedFlag.removeEventListener("click", this._a10), this.k.removeEventListener("keydown", this._a11); var i = this._i1(); i && i.removeEventListener("click", this._a9) } this.hiddenInput && t && t.removeEventListener("submit", this._a14), this.d.autoHideDialCode && (t && t.removeEventListener("submit", this._a8), this.a.removeEventListener("blur", this._a8)), this.a.removeEventListener("keyup", this._a12), this.a.removeEventListener("cut", this._a13), this.a.removeEventListener("paste", this._a13), this.a.removeAttribute("data-intl-tel-input-id"); var e = this.a.parentNode; e.parentNode.insertBefore(this.a, e), e.parentNode.removeChild(e), delete window.intlTelInputGlobals.instances[this.id] } }, { key: "getExtension", value: function () { return window.intlTelInputUtils ? intlTelInputUtils.getExtension(this._6(), this.s.iso2) : "" } }, { key: "getNumber", value: function (t) { if (window.intlTelInputUtils) { var i = this.s.iso2; return intlTelInputUtils.formatNumber(this._6(), i, t) } return "" } }, { key: "getNumberType", value: function () { return window.intlTelInputUtils ? intlTelInputUtils.getNumberType(this._6(), this.s.iso2) : -99 } }, { key: "getSelectedCountryData", value: function () { return this.s } }, { key: "getValidationError", value: function () { if (window.intlTelInputUtils) { var t = this.s.iso2; return intlTelInputUtils.getValidationError(this._6(), t) } return -99 } }, { key: "isValidNumber", value: function () { var t = this._6().trim(), i = this.d.nationalMode ? this.s.iso2 : ""; return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(t, i) : null } }, { key: "setCountry", value: function (t) { var i = t.toLowerCase(); this.l.classList.contains("iti__".concat(i)) || (this._z(i), this._4(this.s.dialCode, !1), this._m2CountryChange()) } }, { key: "setNumber", value: function (t) { var i = this._v(t); this._u(t), i && this._m2CountryChange() } }, { key: "setPlaceholderNumberType", value: function (t) { this.d.placeholderNumberType = t, this._0() } }], e(t.prototype, n), a && e(t, a), o }(); o.getCountryData = function () { return s }; var v = function (t, i, e) { var s = document.createElement("script"); s.onload = function () { d("handleUtils"), i && i() }, s.onerror = function () { d("rejectUtilsScriptPromise"), e && e() }, s.className = "iti-load-utils", s.async = !0, s.src = t, document.body.appendChild(s) }; o.loadUtils = function (t) { if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) { if (window.intlTelInputGlobals.startedLoadingUtilsScript = !0, "undefined" != typeof Promise) return new Promise(function (i, e) { return v(t, i, e) }); v(t) } return null }, o.defaults = l, o.version = "17.0.17", t.fn.intlTelInput = function (e) { var s, n = arguments; return e === i || "object" == typeof e ? this.each(function () { if (!t.data(this, "plugin_intlTelInput")) { var i = new c(this, e); i._init(), window.intlTelInputGlobals.instances[i.id] = i, t.data(this, "plugin_intlTelInput", i) } }) : "string" == typeof e && "_" !== e[0] ? (this.each(function () { var i = t.data(this, "plugin_intlTelInput"); i instanceof c && "function" == typeof i[e] && (s = i[e].apply(i, Array.prototype.slice.call(n, 1))), "destroy" === e && t.data(this, "plugin_intlTelInput", null) }), s !== i ? s : this) : void 0 } });